{"version":3,"sources":["javascript/images.js","javascript/game-board.js"],"names":["images","shuffle","array","counter","length","index","Math","floor","random","temp","alert","gameBoard","document","getElementById","scoreDocument","timeDocument","allImages","getElementsByClassName","clickedImages","imageId","score","id","clickCounter","rowPosition","columnPosition","increment","time","interval","innerHTML","toString","myTimer","confirm","window","location","getRandomImage","items","randomImage","hideImages","style","opacity","deleteImages","matchingImage1","matchingImage2","remove","drawImage","imageBorder","createElement","classList","add","gridRowStart","gridColumnStart","imageElement","src","onclick","setInterval","push","setTimeout","appendChild","map"],"mappings":"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","file":"game-board.b91a6e88.js","sourceRoot":"..","sourcesContent":["export const images = [\r\n    \"https://logos-download.com/wp-content/uploads/2018/01/Transformers_Autobot_logo_red.png\",\r\n    \"https://logos-download.com/wp-content/uploads/2018/01/Transformers_Autobot_logo_red.png\",\r\n    \"./autobot.png\",\r\n    \"./decepticon.png\",\r\n    // \"../images/triforce.png\",\r\n    // \"../images/sonic.png\",\r\n    // \"../images/mario.png\",\r\n    // \"../images/luigi.png\",\r\n    // \"../images/wario.png\",\r\n    // \"../images/waluigi.png\",\r\n    // \"../images/mega-man.png\",\r\n    // \"../images/playstation.png\",\r\n    // \"../images/Xbox.png\",\r\n    // \"../images/nintendo.png\",\r\n    // \"../images/sega.png\",\r\n    // \"../images/smash-bros.png\",\r\n    // \"../images/metroid.png\",\r\n    // \"../images/tails.png\",\r\n    // \"../images/github.png\",\r\n    // \"../images/twitter.png\",\r\n    // \"../images/instagram.png\",\r\n    // \"../images/snapchat.png\",\r\n    // \"../images/iron-man.png\",\r\n    // \"../images/cap-america.png\",\r\n    // \"../images/batman.png\",\r\n    // \"../images/spider-man.png\",\r\n    // \"../images/the-ring.png\",\r\n    // \"../images/autobot.png\",\r\n    // \"../images/decepticon.png\",\r\n    // \"../images/triforce.png\",\r\n    // \"../images/sonic.png\",\r\n    // \"../images/mario.png\",\r\n    // \"../images/luigi.png\",\r\n    // \"../images/wario.png\",\r\n    // \"../images/waluigi.png\",\r\n    // \"../images/mega-man.png\",\r\n    // \"../images/playstation.png\",\r\n    // \"../images/Xbox.png\",\r\n    // \"../images/nintendo.png\",\r\n    // \"../images/sega.png\",\r\n    // \"../images/smash-bros.png\",\r\n    // \"../images/metroid.png\",\r\n    // \"../images/tails.png\",\r\n    // \"../images/github.png\",\r\n    // \"../images/twitter.png\",\r\n    // \"../images/instagram.png\",\r\n    // \"../images/snapchat.png\",\r\n    // \"../images/iron-man.png\",\r\n    // \"../images/cap-america.png\",\r\n    // \"../images/batman.png\",\r\n    // \"../images/spider-man.png\",\r\n    // \"../images/the-ring.png\",\r\n]\r\n\r\n\r\nexport const shuffle = (array) => {\r\n    let counter = array.length;\r\n\r\n    while (counter > 0) {\r\n        let index = Math.floor(Math.random() * counter);\r\n\r\n        counter--;\r\n\r\n        let temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n\r\n    return array;\r\n}","import { images, shuffle } from \"./images.js\"\r\n\r\nshuffle(images)\r\n\r\nalert(\"The rules of this memory game are very simple, all you have to do is connect as many sets of 2 matching images as possible before the timer hits 60 seconds.\")\r\nalert(\"Good luck!!\")\r\n\r\n// these are a few variables\r\n\r\nconst gameBoard = document.getElementById(\"game-board\")\r\nconst scoreDocument = document.getElementById(\"your-score\")\r\nconst timeDocument = document.getElementById(\"game-time\")\r\nconst allImages = document.getElementsByClassName(\"img\")\r\nlet clickedImages = []\r\nlet imageId = []\r\nlet score = 0\r\nlet id = 0\r\nlet clickCounter = 0\r\nlet rowPosition = 1\r\nlet columnPosition = 0\r\nlet increment = -1\r\nlet time = 0\r\nlet interval = null\r\n\r\n// game timer\r\n\r\ntimeDocument.innerHTML = time.toString()\r\n\r\nconst myTimer = () => {\r\n    time += 1\r\n    timeDocument.innerHTML = time.toString()\r\n\r\n    if (time === 60) {\r\n        if (confirm(`Time is up! Game over. Your final score is ${score}`)) {\r\n            window.location = \"/\"\r\n        }\r\n    } \r\n}\r\n\r\n// this function selects an image\r\n\r\nconst getRandomImage = (items, increment) => {\r\n    const randomImage = items[increment]\r\n    return randomImage\r\n}\r\n\r\n// this hides all the images after 1 second of display\r\n\r\nconst hideImages = () => {\r\n    clickCounter = 0\r\n    clickedImages = []\r\n    imageId = []\r\n    for (let item of allImages) {\r\n        item.style.opacity = \"0\"\r\n    }\r\n}\r\n\r\n// this deletes the matching images\r\n\r\nconst deleteImages = () => {\r\n    const matchingImage1 = document.getElementById(clickedImages[0][1])\r\n    const matchingImage2 = document.getElementById(clickedImages[1][1])\r\n    matchingImage1.remove()\r\n    matchingImage2.remove()\r\n    hideImages()\r\n    score = score + 10\r\n    clickedImages = []\r\n    scoreDocument.innerHTML = score.toString()\r\n}\r\n\r\n// this displays the score on the header\r\n\r\nscoreDocument.innerHTML = score.toString()\r\n\r\n// this is the function that draws the card that holds the image\r\n\r\nconst drawImage = (gameBoard) => {\r\n    columnPosition += 1\r\n    id += 1\r\n    increment += 1\r\n\r\n    if (columnPosition === 11) {\r\n        rowPosition += 1\r\n        columnPosition = 1\r\n    }\r\n\r\n    // this creates a random image \r\n\r\n    const imageBorder = document.createElement(\"div\")\r\n    imageBorder.id = id\r\n    imageBorder.classList.add(\"img-border\")\r\n    imageBorder.style.gridRowStart = rowPosition\r\n    imageBorder.style.gridColumnStart = columnPosition\r\n\r\n    const imageElement = document.createElement(\"img\")\r\n    imageElement.id = Math.floor(Math.random() * 1000000)\r\n    imageElement.classList.add(\"img\")\r\n    imageElement.style.opacity = \"0\"\r\n    imageElement.src = getRandomImage(images, increment)\r\n\r\n\r\n    // this is the function that displays the image after it is clicked\r\n\r\n    const displayImage = () => {\r\n        if (!interval) {\r\n            interval = setInterval(myTimer, 1000)\r\n        }\r\n\r\n        clickCounter += 1\r\n        imageElement.style.opacity = \"1\"\r\n        clickedImages.push([imageElement.src, imageBorder.id])\r\n        imageId.push(imageBorder.id)\r\n\r\n        if (clickedImages[0][0] === clickedImages[1][0]) {\r\n            if (imageId[0] !== imageId[1]) {\r\n                setTimeout(deleteImages, 1000)\r\n            }\r\n            else {\r\n                hideImages()\r\n            }\r\n        }\r\n\r\n\r\n        if (clickCounter === 3) {\r\n            hideImages()\r\n        }\r\n    }\r\n\r\n    imageBorder.onclick = displayImage\r\n\r\n    // this is what displays it all on the game board\r\n\r\n    imageBorder.appendChild(imageElement)\r\n    gameBoard.appendChild(imageBorder)\r\n}\r\n\r\n// this maps over the images to spawn a card\r\n\r\nimages.map(() => {\r\n    drawImage(gameBoard)\r\n})"]}